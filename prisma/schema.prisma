generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model account {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)


  @@unique([provider, providerAccountId])
  @@index([userId], map: "account_userId_fkey")
}

model session {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "session_userId_fkey")
}

model taloes {
  idtalao     String  @id @default(auto()) @map("_id") @db.ObjectId
  talao       String? @unique(map: "talao_UNIQUE")
  data        String?
  tel         String?
  numeracao   String?
  descricao   String? 
  obs         String? 
  recebidopor String? 
  cliente     String?
  loja        String?
  produto     String?
  referencia  String?
}

model user {
 id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   @db.String
  isActive      String?   @default("1") @db.String
  account       account[]
  session       session[]
}

model verificationtoken {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique(map: "verificationToken_token_key")
  expires    DateTime
}

model clientes{
  idcliente String  @id @default(auto()) @map("_id") @db.ObjectId
  label     String  @unique
}
